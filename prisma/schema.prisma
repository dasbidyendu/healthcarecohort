// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  DOCTOR
  STAFF
}

model Hospital {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  users        User[]
  doctors      Doctor[]
  patients     Patient[]
  appointments Appointment[]
  createdAt    DateTime      @default(now())
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       Role
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  hospitalId String
  createdAt  DateTime @default(now())
  Doctor     Doctor[]
}

model Doctor {
  id             String         @id @default(uuid())
  name           String
  specialization String
  user           User?          @relation(fields: [userId], references: [id]) // optional: doctor might be a User
  appointments   Appointment[]
  hospital       Hospital       @relation(fields: [hospitalId], references: [id])
  hospitalId     String
  userId         String?
  Prescription   Prescription[]
}

model Patient {
  id            String         @id @default(uuid())
  name          String
  age           Int
  gender        String
  phone         String
  appointments  Appointment[]
  prescriptions Prescription[]
  hospital      Hospital       @relation(fields: [hospitalId], references: [id])
  hospitalId    String
}

model Appointment {
  id         String   @id @default(uuid())
  doctor     Doctor   @relation(fields: [doctorId], references: [id])
  doctorId   String
  patient    Patient  @relation(fields: [patientId], references: [id])
  patientId  String
  date       DateTime
  notes      String?
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  hospitalId String
  createdAt  DateTime @default(now())
}

model Prescription {
  id        String   @id @default(uuid())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  doctorId  String
  content   String
  createdAt DateTime @default(now())
}
